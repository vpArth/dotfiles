[color]
ui = true
[credential]
helper = cache --timeout=60480000
[core]
autocrlf = input
excludesfile = ~/.gitignore
[push]
default = current
[alias]
aliases = config --get-regexp '^alias\\.'
; Basic shortcuts
st = status
co = checkout
cm = !git add -A && git commit -m
ci = commit
amend = commit --amend --no-edit
br = branch
save = !git add -A && git commit -m 'QUICK SAVE. '
undo = reset HEAD~1 --mixed
wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
hist = !git log --pretty=format:'%C(auto)%h %ad | %s%d <%an>' --graph --all --date=short || true

; Useful functions
brcur = rev-parse --abbrev-ref HEAD
rebasebr = "!f() { cur=$(git brcur); git co $1 && git rebase ${2-$cur} && git co $cur; }; f"
mergebr = "!f() { cur=$(git brcur); git co $1 && git merge ${2-$cur} && git co $cur; }; f"
swaplast2 = !git tag swap_tmp && git reset swap_tmp~2 && git cherry-pick swap_tmp swap_tmp~1 && git tag -d swap_tmp
delmergedbranches = "!f(){ git branch -a --merged remotes/origin/{$1-master} | grep -v master | grep "remotes/origin/" | cut -d "/" -f 3 | xargs -n 1 git push --delete origin }; f"
wipe-object = "!f(){ echo filter-branch --index-filter \"git rm --ignore-unmatch --cached $1\" -- $2^.. }; f" # git wipe-object filename HEAD~4

; Some rare used
root = rev-parse --show-toplevel
s = status -s
l = log --pretty=format:'%C(auto)%h %ad | %s%d <%an>' --graph -10 --date=short
ec = config --global -e
cob = checkout -b
wip = !git add -u && git commit -m "WIP"
rev = "!f(){rev=$(git rev-parse ${1-HEAD}); git revert $rev --no-edit; }; f"
up = !git pull --rebase --prune $@ && git submodule update --init --recursive
bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
aa = add -A
smls = "!(cd $(git root) ; grep path .gitmodules | sed 's/.*= //' )"
smrm-f = "!f(){ ( cd $(git root) ; git submodule deinit -f $1 && git rm -f $1 && rm -rf $(git rev-parse --show-toplevel)/.git/modules/$1 ) && echo "Submodule $1 completely removed"; }; f"
smrm = "!f(){ [ -z $(git smls|grep -Fx $1) ] && echo "Wrong or no submodule" && exit 1 || git smrm-f $1;}; f"

[receive]
denyCurrentBranch = ignore
[url "https://github.com/"]
insteadOf = gh://
[branch]
autosetuprebase = always

[branch "master"]
rebase = true
[fetch]
prune = true
[mergetool]
keepBackup = false
[merge]
tool = vimdiff3
[pager]
l = false
[gui]
spellingdictionary = none
